diff --git a/meson.build b/meson.build
index bb8928f3..a0aad3aa 100644
--- a/meson.build
+++ b/meson.build
@@ -256,6 +256,11 @@ elif host_machine.system() == 'dripos'
 	rtld_include_dirs += include_directories('sysdeps/dripos/include')
 	libc_include_dirs += include_directories('sysdeps/dripos/include')
 	subdir('sysdeps/dripos')
+elif host_machine.system() == 'arctan'
+	disable_linux_option = true
+	rtld_include_dirs += include_directories('sysdeps/arctan/include')
+	libc_include_dirs += include_directories('sysdeps/arctan/include')
+	subdir('sysdeps/arctan')
 else
 	error('No sysdeps defined for OS: ' + host_machine.system())
 endif
diff --git a/sysdeps/arctan/crt-x86_64/crt0.S b/sysdeps/arctan/crt-x86_64/crt0.S
new file mode 100644
index 00000000..381acf58
--- /dev/null
+++ b/sysdeps/arctan/crt-x86_64/crt0.S
@@ -0,0 +1 @@
+movq $0, %rax
diff --git a/sysdeps/arctan/crt-x86_64/crt1.S b/sysdeps/arctan/crt-x86_64/crt1.S
new file mode 100644
index 00000000..381acf58
--- /dev/null
+++ b/sysdeps/arctan/crt-x86_64/crt1.S
@@ -0,0 +1 @@
+movq $0, %rax
diff --git a/sysdeps/arctan/crt-x86_64/crti.S b/sysdeps/arctan/crt-x86_64/crti.S
new file mode 100644
index 00000000..381acf58
--- /dev/null
+++ b/sysdeps/arctan/crt-x86_64/crti.S
@@ -0,0 +1 @@
+movq $0, %rax
diff --git a/sysdeps/arctan/crt-x86_64/crtn.S b/sysdeps/arctan/crt-x86_64/crtn.S
new file mode 100644
index 00000000..381acf58
--- /dev/null
+++ b/sysdeps/arctan/crt-x86_64/crtn.S
@@ -0,0 +1 @@
+movq $0, %rax
diff --git a/sysdeps/arctan/generic/entry.cpp b/sysdeps/arctan/generic/entry.cpp
new file mode 100644
index 00000000..248e8777
--- /dev/null
+++ b/sysdeps/arctan/generic/entry.cpp
@@ -0,0 +1,34 @@
+
+#include <stdint.h>
+#include <stdlib.h>
+#include <bits/ensure.h>
+#include <mlibc/elf/startup.h>
+
+// defined by the POSIX library
+void __mlibc_initLocale();
+
+extern "C" uintptr_t *__dlapi_entrystack();
+
+extern char **environ;
+static mlibc::exec_stack_data __mlibc_stack_data;
+
+struct LibraryGuard {
+	LibraryGuard();
+};
+
+static LibraryGuard guard;
+
+LibraryGuard::LibraryGuard() {
+	__mlibc_initLocale();
+
+	// Parse the exec() stack.
+	mlibc::parse_exec_stack(__dlapi_entrystack(), &__mlibc_stack_data);
+	mlibc::set_startup_data(__mlibc_stack_data.argc, __mlibc_stack_data.argv,
+			__mlibc_stack_data.envp);
+}
+
+extern "C" void __mlibc_entry(int (*main_fn)(int argc, char *argv[], char *env[])) {
+	// TODO: call __dlapi_enter, otherwise static builds will break (see Linux sysdeps)
+	auto result = main_fn(__mlibc_stack_data.argc, __mlibc_stack_data.argv, environ);
+	exit(result);
+}
diff --git a/sysdeps/arctan/generic/generic.cpp b/sysdeps/arctan/generic/generic.cpp
new file mode 100644
index 00000000..33b8d94f
--- /dev/null
+++ b/sysdeps/arctan/generic/generic.cpp
@@ -0,0 +1,199 @@
+#include <stdint.h>
+#include <time.h>
+
+namespace mlibc {
+	#define SYSCALL(code, args, ret) \
+		__asm__("mov %1, %%edi; \
+                         mov %2, %%rsi; \
+	                 syscall" : "=a"(ret) : "a"(code), "g"(args) : "rdi", "rsi");
+
+	struct ARC_SyscallArgs {
+		uint64_t a;
+		uint64_t b;
+		uint64_t c;
+		uint64_t d;
+		uint64_t e;
+		uint64_t f;
+		uint64_t g;
+	}__attribute__((packed));
+
+	void sys_libc_log(char const *str) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) str;
+
+		int ret = 0;
+		SYSCALL(0x0E, &args, ret);
+	}
+
+	void sys_exit(int code) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) code;
+
+		int ret = 0;
+		SYSCALL(0x04, &args, ret);
+
+		for (;;);
+	}
+
+	void sys_libc_panic() {
+		sys_libc_log("mlibc: panic!\n");
+		sys_exit(-UINT16_MAX);
+
+		for (;;);
+	}
+
+	int sys_tcb_set(void *arg) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) arg;
+
+		int ret = 0;
+		SYSCALL(0x00, &args, ret);
+
+		return ret;
+	}
+
+	int sys_futex_wait(int *ptr, int expected, timespec const *time) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) ptr;
+		args.b = (uint64_t) expected;
+		args.c = (uint64_t) time;
+
+		int ret = 0;
+		SYSCALL(0x01, &args, ret);
+
+		return ret;
+	}
+
+	int sys_futex_wake(int *ptr) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) ptr;
+
+		int ret = 0;
+		SYSCALL(0x02, &args, ret);
+
+		return ret;
+	}
+
+	int sys_clock_get(int a, long *b, long *c) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) a;
+		args.b = (uint64_t) b;
+		args.c = (uint64_t) c;
+
+		int ret = 0;
+		SYSCALL(0x03, &args, ret);
+
+		return ret;
+	}
+
+	int sys_seek(int fd, long offset, int whence, long *new_offset) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) fd;
+		args.b = (uint64_t) offset;
+		args.c = (uint64_t) whence;
+		args.d = (uint64_t) new_offset;
+
+		int ret = 0;
+		SYSCALL(0x05, &args, ret);
+
+		return ret;
+	}
+
+	int sys_write(int fd, void const *a, unsigned long b, long *c) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) fd;
+		args.b = (uint64_t) a;
+		args.c = (uint64_t) b;
+		args.d = (uint64_t) c;
+
+		int ret = 0;
+		SYSCALL(0x06, &args, ret);
+
+		return ret;
+	}
+
+	int sys_read(int fd, void *buf, unsigned long count, long *bytes_read) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) fd;
+		args.b = (uint64_t) buf;
+		args.c = (uint64_t) count;
+		args.d = (uint64_t) bytes_read;
+
+		int ret = 0;
+		SYSCALL(0x07, &args, ret);
+
+		return ret;
+	}
+
+	int sys_close(int fd) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) fd;
+
+		int ret = 0;
+		SYSCALL(0x08, &args, ret);
+
+		return ret;
+	}
+
+	int sys_open(char const *name, int flags, unsigned int mode, int *fd) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) name;
+		args.b = (uint64_t) flags;
+		args.c = (uint64_t) mode;
+		args.d = (uint64_t) fd;
+
+		int ret = 0;
+		SYSCALL(0x09, &args, ret);
+
+		return ret;
+	}
+
+	int sys_vm_map(void *hint, unsigned long size, int prot, int flags, int fd, long offset, void **window) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) hint;
+		args.b = (uint64_t) size;
+		args.c = (uint64_t) prot;
+		args.d = (uint64_t) flags;
+		args.e = (uint64_t) fd;
+		args.f = (uint64_t) offset;
+		args.g = (uint64_t) window;
+
+		int ret = 0;
+		SYSCALL(0x0A, &args, ret);
+
+		return ret;
+	}
+
+	int sys_vm_unmap(void *a, unsigned long b) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) a;
+		args.b = (uint64_t) b;
+
+		int ret = 0;
+		SYSCALL(0x0B, &args, ret);
+
+		return ret;
+	}
+
+	int sys_anon_allocate(unsigned long size, void **ptr) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) size;
+		args.b = (uint64_t) ptr;
+
+		int ret = 0;
+		SYSCALL(0x0C, &args, ret);
+
+		return ret;
+	}
+
+	int sys_anon_free(void *ptr, unsigned long size) {
+		struct ARC_SyscallArgs args;
+		args.a = (uint64_t) ptr;
+		args.b = (uint64_t) size;
+
+		int ret = 0;
+		SYSCALL(0x0D, &args, ret);
+
+		return ret;
+	}
+} // namespace mlibc
diff --git a/sysdeps/arctan/include/abi-bits/access.h b/sysdeps/arctan/include/abi-bits/access.h
new file mode 120000
index 00000000..cb839316
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/access.h
@@ -0,0 +1 @@
+../../../../abis/linux/access.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/auxv.h b/sysdeps/arctan/include/abi-bits/auxv.h
new file mode 120000
index 00000000..e760d62a
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/auxv.h
@@ -0,0 +1 @@
+../../../../abis/managarm/auxv.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/blkcnt_t.h b/sysdeps/arctan/include/abi-bits/blkcnt_t.h
new file mode 120000
index 00000000..0b0ec270
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/blkcnt_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/blkcnt_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/blksize_t.h b/sysdeps/arctan/include/abi-bits/blksize_t.h
new file mode 120000
index 00000000..7dc8d7cf
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/blksize_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/blksize_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/clockid_t.h b/sysdeps/arctan/include/abi-bits/clockid_t.h
new file mode 120000
index 00000000..6a42da56
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/clockid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/clockid_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/dev_t.h b/sysdeps/arctan/include/abi-bits/dev_t.h
new file mode 120000
index 00000000..bca881e9
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/dev_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/dev_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/epoll.h b/sysdeps/arctan/include/abi-bits/epoll.h
new file mode 120000
index 00000000..eb4b76dc
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/epoll.h
@@ -0,0 +1 @@
+../../../../abis/linux/epoll.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/errno.h b/sysdeps/arctan/include/abi-bits/errno.h
new file mode 120000
index 00000000..6e507def
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/errno.h
@@ -0,0 +1 @@
+../../../../abis/linux/errno.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/fcntl.h b/sysdeps/arctan/include/abi-bits/fcntl.h
new file mode 120000
index 00000000..463e2c95
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/fcntl.h
@@ -0,0 +1 @@
+../../../../abis/linux/fcntl.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/fsblkcnt_t.h b/sysdeps/arctan/include/abi-bits/fsblkcnt_t.h
new file mode 120000
index 00000000..898dfb2f
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/fsblkcnt_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/fsblkcnt_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/fsfilcnt_t.h b/sysdeps/arctan/include/abi-bits/fsfilcnt_t.h
new file mode 120000
index 00000000..791755c9
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/fsfilcnt_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/fsfilcnt_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/gid_t.h b/sysdeps/arctan/include/abi-bits/gid_t.h
new file mode 120000
index 00000000..abce6d69
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/gid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/gid_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/in.h b/sysdeps/arctan/include/abi-bits/in.h
new file mode 120000
index 00000000..418d1d5c
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/in.h
@@ -0,0 +1 @@
+../../../../abis/linux/in.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/ino_t.h b/sysdeps/arctan/include/abi-bits/ino_t.h
new file mode 120000
index 00000000..4c20aca2
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/ino_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/ino_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/inotify.h b/sysdeps/arctan/include/abi-bits/inotify.h
new file mode 120000
index 00000000..b5cb2823
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/inotify.h
@@ -0,0 +1 @@
+../../../../abis/linux/inotify.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/ioctls.h b/sysdeps/arctan/include/abi-bits/ioctls.h
new file mode 120000
index 00000000..595106b6
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/ioctls.h
@@ -0,0 +1 @@
+../../../../abis/linux/ioctls.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/limits.h b/sysdeps/arctan/include/abi-bits/limits.h
new file mode 120000
index 00000000..6c88db2e
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/limits.h
@@ -0,0 +1 @@
+../../../../abis/linux/limits.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/mode_t.h b/sysdeps/arctan/include/abi-bits/mode_t.h
new file mode 120000
index 00000000..5d78fdfc
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/mode_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/mode_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/mqueue.h b/sysdeps/arctan/include/abi-bits/mqueue.h
new file mode 120000
index 00000000..fa87b078
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/mqueue.h
@@ -0,0 +1 @@
+../../../../abis/linux/mqueue.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/msg.h b/sysdeps/arctan/include/abi-bits/msg.h
new file mode 120000
index 00000000..f402b493
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/msg.h
@@ -0,0 +1 @@
+../../../../abis/linux/msg.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/nlink_t.h b/sysdeps/arctan/include/abi-bits/nlink_t.h
new file mode 120000
index 00000000..bb3b625c
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/nlink_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/nlink_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/packet.h b/sysdeps/arctan/include/abi-bits/packet.h
new file mode 120000
index 00000000..998ef1ab
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/packet.h
@@ -0,0 +1 @@
+../../../../abis/linux/packet.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/pid_t.h b/sysdeps/arctan/include/abi-bits/pid_t.h
new file mode 120000
index 00000000..baa90f6a
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/pid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/pid_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/poll.h b/sysdeps/arctan/include/abi-bits/poll.h
new file mode 120000
index 00000000..8ea6a0a3
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/poll.h
@@ -0,0 +1 @@
+../../../../abis/linux/poll.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/ptrace.h b/sysdeps/arctan/include/abi-bits/ptrace.h
new file mode 120000
index 00000000..b2517b2c
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/ptrace.h
@@ -0,0 +1 @@
+../../../../abis/linux/ptrace.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/reboot.h b/sysdeps/arctan/include/abi-bits/reboot.h
new file mode 120000
index 00000000..77013a41
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/reboot.h
@@ -0,0 +1 @@
+../../../../abis/linux/reboot.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/resource.h b/sysdeps/arctan/include/abi-bits/resource.h
new file mode 120000
index 00000000..88d74025
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/resource.h
@@ -0,0 +1 @@
+../../../../abis/linux/resource.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/seek-whence.h b/sysdeps/arctan/include/abi-bits/seek-whence.h
new file mode 120000
index 00000000..df7bccf0
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/seek-whence.h
@@ -0,0 +1 @@
+../../../../abis/linux/seek-whence.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/shm.h b/sysdeps/arctan/include/abi-bits/shm.h
new file mode 120000
index 00000000..067d8c4f
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/shm.h
@@ -0,0 +1 @@
+../../../../abis/linux/shm.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/signal.h b/sysdeps/arctan/include/abi-bits/signal.h
new file mode 120000
index 00000000..4dcb0b7c
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/signal.h
@@ -0,0 +1 @@
+../../../../abis/linux/signal.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/socket.h b/sysdeps/arctan/include/abi-bits/socket.h
new file mode 120000
index 00000000..f1dc016e
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/socket.h
@@ -0,0 +1 @@
+../../../../abis/linux/socket.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/socklen_t.h b/sysdeps/arctan/include/abi-bits/socklen_t.h
new file mode 120000
index 00000000..41f3b11f
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/socklen_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/socklen_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/stat.h b/sysdeps/arctan/include/abi-bits/stat.h
new file mode 120000
index 00000000..1f63b41f
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/stat.h
@@ -0,0 +1 @@
+../../../../abis/linux/stat.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/statfs.h b/sysdeps/arctan/include/abi-bits/statfs.h
new file mode 120000
index 00000000..e3d202f5
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/statfs.h
@@ -0,0 +1 @@
+../../../../abis/linux/statfs.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/statvfs.h b/sysdeps/arctan/include/abi-bits/statvfs.h
new file mode 120000
index 00000000..1fc80c2a
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/statvfs.h
@@ -0,0 +1 @@
+../../../../abis/linux/statvfs.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/statx.h b/sysdeps/arctan/include/abi-bits/statx.h
new file mode 120000
index 00000000..8702a1d0
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/statx.h
@@ -0,0 +1 @@
+../../../../abis/linux/statx.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/suseconds_t.h b/sysdeps/arctan/include/abi-bits/suseconds_t.h
new file mode 120000
index 00000000..9ed65977
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/suseconds_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/suseconds_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/termios.h b/sysdeps/arctan/include/abi-bits/termios.h
new file mode 120000
index 00000000..ee8f0b09
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/termios.h
@@ -0,0 +1 @@
+../../../../abis/linux/termios.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/time.h b/sysdeps/arctan/include/abi-bits/time.h
new file mode 120000
index 00000000..2a026257
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/time.h
@@ -0,0 +1 @@
+../../../../abis/linux/time.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/uid_t.h b/sysdeps/arctan/include/abi-bits/uid_t.h
new file mode 120000
index 00000000..b3067778
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/uid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/uid_t.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/utsname.h b/sysdeps/arctan/include/abi-bits/utsname.h
new file mode 120000
index 00000000..b2857547
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/utsname.h
@@ -0,0 +1 @@
+../../../../abis/linux/utsname.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/vm-flags.h b/sysdeps/arctan/include/abi-bits/vm-flags.h
new file mode 120000
index 00000000..bbe258cf
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/vm-flags.h
@@ -0,0 +1 @@
+../../../../abis/linux/vm-flags.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/vt.h b/sysdeps/arctan/include/abi-bits/vt.h
new file mode 120000
index 00000000..5798a4ac
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/vt.h
@@ -0,0 +1 @@
+../../../../abis/linux/vt.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/wait.h b/sysdeps/arctan/include/abi-bits/wait.h
new file mode 120000
index 00000000..feb2840c
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/wait.h
@@ -0,0 +1 @@
+../../../../abis/linux/wait.h
\ No newline at end of file
diff --git a/sysdeps/arctan/include/abi-bits/xattr.h b/sysdeps/arctan/include/abi-bits/xattr.h
new file mode 120000
index 00000000..66412d70
--- /dev/null
+++ b/sysdeps/arctan/include/abi-bits/xattr.h
@@ -0,0 +1 @@
+../../../../abis/linux/xattr.h
\ No newline at end of file
diff --git a/sysdeps/arctan/meson.build b/sysdeps/arctan/meson.build
new file mode 100644
index 00000000..e45d4e53
--- /dev/null
+++ b/sysdeps/arctan/meson.build
@@ -0,0 +1,99 @@
+rtld_sources += files(
+	'generic/generic.cpp'
+)
+
+libc_sources += files(
+	'generic/entry.cpp',
+	'generic/generic.cpp',
+)
+
+if not no_headers
+	install_headers(
+		'include/abi-bits/fcntl.h',
+                'include/abi-bits/termios.h',
+                'include/abi-bits/shm.h',
+                'include/abi-bits/ino_t.h',
+                'include/abi-bits/auxv.h',
+                'include/abi-bits/vt.h',
+                'include/abi-bits/stat.h',
+                'include/abi-bits/msg.h',
+                'include/abi-bits/blkcnt_t.h',
+                'include/abi-bits/time.h',
+                'include/abi-bits/ioctls.h',
+                'include/abi-bits/ptrace.h',
+                'include/abi-bits/gid_t.h',
+                'include/abi-bits/mode_t.h',
+                'include/abi-bits/resource.h',
+                'include/abi-bits/xattr.h',
+                'include/abi-bits/nlink_t.h',
+                'include/abi-bits/wait.h',
+                'include/abi-bits/inotify.h',
+                'include/abi-bits/packet.h',
+                'include/abi-bits/socket.h',
+                'include/abi-bits/vm-flags.h',
+                'include/abi-bits/access.h',
+                'include/abi-bits/limits.h',
+                'include/abi-bits/fsfilcnt_t.h',
+                'include/abi-bits/suseconds_t.h',
+                'include/abi-bits/statfs.h',
+                'include/abi-bits/epoll.h',
+                'include/abi-bits/dev_t.h',
+                'include/abi-bits/clockid_t.h',
+                'include/abi-bits/blksize_t.h',
+                'include/abi-bits/in.h',
+                'include/abi-bits/fsblkcnt_t.h',
+                'include/abi-bits/seek-whence.h',
+                'include/abi-bits/errno.h',
+                'include/abi-bits/uid_t.h',
+                'include/abi-bits/mqueue.h',
+                'include/abi-bits/poll.h',
+                'include/abi-bits/pid_t.h',
+                'include/abi-bits/statx.h',
+                'include/abi-bits/signal.h',
+                'include/abi-bits/utsname.h',
+                'include/abi-bits/statvfs.h',
+                'include/abi-bits/socklen_t.h',
+                'include/abi-bits/reboot.h',
+		subdir: 'abi-bits',
+		follow_symlinks: true
+	)
+endif
+
+if not headers_only
+   custom_target('crt0',
+		build_by_default: true,
+		command: c_compiler.cmd_array() + ['-c', '-o', '@OUTPUT@', '@INPUT@'],
+		input: 'crt-x86_64/crt0.S',
+		output: 'crt0.o',
+		install: true,
+		install_dir: get_option('libdir')
+	)
+
+    custom_target('crt1',
+		build_by_default: true,
+		command: c_compiler.cmd_array() + ['-c', '-o', '@OUTPUT@', '@INPUT@'],
+		input: 'crt-x86_64/crt1.S',
+		output: 'crt1.o',
+		install: true,
+		install_dir: get_option('libdir')
+	)
+
+    custom_target('crti',
+		build_by_default: true,
+		command: c_compiler.cmd_array() + ['-c', '-o', '@OUTPUT@', '@INPUT@'],
+		input: 'crt-x86_64/crti.S',
+		output: 'crti.o',
+		install: true,
+		install_dir: get_option('libdir')
+	)
+
+	custom_target('crtn',
+		build_by_default: true,
+		command: c_compiler.cmd_array() + ['-c', '-o', '@OUTPUT@', '@INPUT@'],
+		input: 'crt-x86_64/crtn.S',
+		output: 'crtn.o',
+		install: true,
+		install_dir: get_option('libdir')
+	)
+endif
+
